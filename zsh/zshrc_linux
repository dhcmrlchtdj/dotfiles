source ~/.zshrc_grml
source ~/.zshrc_prompt
#source ~/.zshrc_others

### node ###
export NVM_DIR=~/.nvm
source ~/.nvm/nvm.sh
alias node="node --harmony"
### END node ###

export QT_SELECT=4
export TERM="konsole-256color"
export LESS="-RXFM"

export EDITOR="vim"
#source virtualenvwrapper_lazy.sh

## alias
alias cp="cp -r"
#alias rm="rm -rvfi"
#alias rm="trash"
alias rm="rm -rvf"
alias tree="tree --dirsfirst"
alias la="ls -A"
alias ll="ls -lAh --time-style=long-iso"
alias ls="ls --color=auto --group-directories-first -vF"
alias du="du -h"
alias df="df -Th"
alias free="free -h"

alias pacman="pacman --color=auto"
alias tracepath="tracepath -b"
alias maria="mysql -p -u"

# systemctl
alias _start="sudo systemctl start"
alias _stop="sudo systemctl stop"

alias cm="convmv -f cp936 -t utf8 --notest -r"
alias j="jobs -dl"
alias h="htop"
alias f="find . -name"
alias py="python"
alias py2="python2"
alias ujs="uglifyjs -m -c unsafe=true"
alias sss="python3 -m http.server"
alias ssh="ssh -2"

#alias zip="7z a -tzip"
alias qemu="qemu-system-x86_64 -enable-kvm -vga vmware -net nic,model=virtio -net user -m 256"
#alias xp="qemu-system-i386 -enable-kvm -net nic,model=rtl8139 -net user -m 256"

trash () {
    for i in "$@"; do
        kioclient move "$i" trash:/;
    done
}

small () {
    for i in "$@"; do
        echo "optimize $i...";
        case $i in
            *.jpg|*.jpeg)
                mv $i $i.bak;
                jpegtran -copy none -optimize -perfect $i.bak > $i;
                ;;
        esac
    done
}

ex () {
    case $1 in
        *.t(xz|gz|bz2|ar.(xz|gz|bz2)))
            _out="";
            if [[ $2 != "" ]]; then
                mkdir -p $2;
                _out="-C$2";
            fi
            bsdtar xvf $1 $_out;
            ;;
        *.7z)
            7z x $1 ${2:+-o${2}};
            ;;
        *.(zip|rar|gz|bz2))
            (export LANG=zh_CN.gbk; 7z x $1 ${2:+-o${2}});
            ;;
        * )
            echo "unrecognized file extension: '$1'" >&2;
            ;;
    esac
}
#alias tarball="bsdtar cvaf"

zzz () {
    for i in "$@"; do
        7z a -tzip $i.zip $i;
    done
}

ttt () {
    if [[ -z "$TMUX" ]] ;then
        ID="`tmux ls | grep -vm1 attached | cut -d: -f1`" # get the id of a deattached session
        if [[ -z "$ID" ]] ;then # if not available create a new one
            tmux -CC
        else
            tmux -CC attach -t "$ID" # if available attach to it
        fi
    fi
}
#ttt
