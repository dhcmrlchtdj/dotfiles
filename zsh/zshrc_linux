source ~/.zshrc_grml
source ~/.zshrc_prompt
#source ~/.zshrc_others


# command start with space will not be saved
setopt HIST_IGNORE_SPACE


export EDITOR="vim"
export TERM="xterm-256color"


### git for directoy ###
chpwd_profile_default() {
    [[ ${profile} == ${CHPWD_PROFILE} ]] && return 1
    unset GIT_AUTHOR_NAME
    unset GIT_AUTHOR_EMAIL
    unset GIT_COMMITTER_NAME
    unset GIT_COMMITTER_EMAIL
}
chpwd_profiles
#### END git for directoy ###


### autocompletion ###
fpath=(/usr/local/share/zsh-completions $fpath)
compinit
### END autocompletion ###


### node ###
export NVM_DIR=~/.nvm
source ~/.nvm/nvm.sh
function chpwd_nvm_use() { nvm use &> /dev/null || nvm use system &> /dev/null ; return 0 }
chpwd_nvm_use
chpwd_functions=( ${chpwd_functions} chpwd_nvm_use )
alias node="node --harmony"
eval "$(npm completion)"
### END node ###


## alias
alias cp="cp -r"
alias rm="grm -Irv"
alias ls="ls --color=auto --group-directories-first -vF"
alias la="ls -A"
alias ll="ls -lAh --time-style=long-iso"
alias du="du -h"
alias df="df -h"
alias free="free -h"
alias tree="tree --dirsfirst"

alias pacman="pacman --color=auto"
alias tracepath="tracepath -b"

alias cm="convmv -f cp936 -t utf8 --notest -r"
alias j="jobs -dl"
alias h="htop"
alias f="find . -name"
alias ssh="ssh -2"
alias py="python3"
alias py3="python3"
alias py2="python2"

alias sss="python3 -m http.server"
alias mm="mitmproxy --palette light"
alias mmm="mitmproxy --palette light -i '~q|~s'"
alias css="cleancss --s0"
alias ujs="uglifyjs -m -c unsafe=true"
alias marked="marked --gfm --breaks --smart-lists"


ex () {
    case $1 in
        *.t(xz|gz|bz2|ar.(xz|gz|bz2)))
            _out="";
            if [[ $2 != "" ]]; then
                mkdir -p $2;
                _out="-C$2";
            fi
            bsdtar xvf $1 $_out;
            ;;
        *.7z)
            7z x $1 ${2:+-o${2}};
            ;;
        *.(zip|rar|gz|bz2))
            (export LANG=zh_CN.gbk; 7z x $1 ${2:+-o${2}});
            ;;
        * )
            echo "unrecognized file extension: '$1'" >&2;
            ;;
    esac
}
#alias tarball="bsdtar cvaf"

zzz () {
    for i in "$@"; do
        7z a -tzip $i.zip $i;
    done
}

ttt () {
    if [[ -z "$TMUX" ]] ;then
        ID="`tmux ls | grep -vm1 attached | cut -d: -f1`" # get the id of a deattached session
        if [[ -z "$ID" ]] ;then # if not available create a new one
            tmux -CC
        else
            tmux -CC attach -t "$ID" # if available attach to it
        fi
    fi
}
ttt
