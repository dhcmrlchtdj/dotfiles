_has() {
    type "$1" &> /dev/null
}

PATH="$HOME/.local/bin:$PATH"
export PATH
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:=$HOME/.config}"
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export GPG_TTY=$(tty)
export EDITOR="nvim"
export LESS="-FXR"


source ~/.zshrc_grml
source ~/.zshrc_prompt_ooxx
prompt ooxx


autoload -Uz compinit
# compinit


# command start with space will not be saved
setopt HIST_IGNORE_SPACE


### git for directoy ###
chpwd_profile_default() {
    [[ ${profile} == ${CHPWD_PROFILE} ]] && return 1
    unset GIT_AUTHOR_NAME
    unset GIT_AUTHOR_EMAIL
    unset GIT_COMMITTER_NAME
    unset GIT_COMMITTER_EMAIL
}
if _has "chpwd_profiles"; then chpwd_profiles; fi
#### END git for directoy ###


### alias ###
alias sudo="sudo "
alias cp="cp -r"
alias rm="rm -Irv"
alias ls="ls --color=auto --group-directories-first -vF"
alias la="ls -A"
alias ll="ls -lAh --time-style=long-iso"
alias du="du -h"
alias df="df -h"
alias free="free -h"
alias tree="tree -F --dirsfirst"
alias sc="screen -dRR"

alias j="jobs -dl"
alias h="htop"
alias f="find . -name"
alias py="python3"
alias py3="python3"
alias py2="python2"
alias vim="nvim"
alias vimdiff="nvim -d"
alias rg="rg --smart-case"

alias zz="bsdtar cavf"
#alias xx="bsdtar xvf"
alias xx="unar"
alias sss="python3 -m http.server"
alias mm="mitmproxy -p 8888"
alias mmm="mitmproxy -p 8888 -i '~q | ~s'"
alias ccc="clang -std=c11 -Weverything -Wno-missing-prototypes"
alias ttt="tmux -CC attach || tmux -CC"
alias ujs="uglifyjs -m -c unsafe=true"
alias www="webpack-dev-server"
alias curlw="curl -w '\ntime_namelookup:\t%{time_namelookup}\ntime_connect:\t\t%{time_connect}\ntime_appconnect:\t%{time_appconnect}\ntime_pretransfer:\t%{time_pretransfer}\ntime_redirect:\t\t%{time_redirect}\ntime_starttransfer:\t%{time_starttransfer}\n------\ntime_total:\t\t%{time_total}\n'"
### END alias ###


zzz() {
    for i in "$@"; do
        zz $i.zip $i;
    done
}

# ppp() {
    # export all_proxy='socks5h://127.0.0.1:1080'
    # export http_proxy=$all_proxy
    # export https_proxy=$all_proxy
    # export ftp_proxy=$all_proxy
    # export rsync_proxy=$all_proxy
    # echo "all_proxy='$all_proxy'"
# }
# pppp () {
    # unset all_proxy
    # unset http_proxy
    # unset https_proxy
    # unset ftp_proxy
    # unset rsync_proxy
    # echo "all_proxy='$all_proxy'"
# }

### node ###
# export NVM_DIR="$HOME/.nvm";
# if [[ -f "$NVM_DIR/nvm.sh" ]]; then
    # source "$NVM_DIR/nvm.sh";
# fi
# chpwd_nvm_use() { nvm use &>/dev/null || nvm use system &>/dev/null; return 0 }
# chpwd_nvm_use
# chpwd_functions=( ${chpwd_functions} chpwd_nvm_use )
# if _has "npm"; then eval "$(npm completion)"; fi
### END node ###
