{
    "ecmaFeatures": {
        "jsx": true
    },
    "parser": "babel-eslint",
    "env": {
        "amd": true,
        "browser": true,
        "es6": true,
        "jquery": true,
        "node": true
    },
    "globals": {},
    "plugins": [
        "react"
    ],
    "rules": {
        // Possible Errors
        "comma-dangle": [2, "never"],
        "no-cond-assign": [2, "except-parens"],
        "no-console": 0,
        "no-constant-condition": 2,
        "no-control-regex": 2,
        "no-debugger": 2,
        "no-dupe-args": 2,
        "no-dupe-keys": 2,
        "no-duplicate-case": 2,
        "no-empty": 0,
        "no-empty-character-class": 2, // disallow the use of empty character classes in regular expressions (recommended)
        "no-ex-assign": 2,
        "no-extra-boolean-cast": 2,
        "no-extra-parens": 0,
        "no-extra-semi": 2,
        "no-func-assign": 2,
        "no-inner-declarations": 2,
        "no-invalid-regexp": 2,
        "no-irregular-whitespace": 2,
        "no-negated-in-lhs": 2,
        "no-obj-calls": 2,
        "no-regex-spaces": 2,
        "no-reserved-keys": 2,
        "no-sparse-arrays": 2,
        "no-unexpected-multiline": 2, // Avoid code that looks like two expressions but is actually one
        "no-unreachable": 2,
        "use-isnan": 2,
        "valid-jsdoc": 0,
        "valid-typeof": 2,

        // Best Practices
        "accessor-pairs": [2, {getWithoutSet: true}], // Enforces getter/setter pairs in objects
        "block-scoped-var": 2,
        "complexity": 0,
        "consistent-return": 0,
        "curly": [1, "multi-line"],
        "default-case": 0,
        "dot-location": [1, "property"],
        "dot-notation": 0,
        "eqeqeq": [1, "smart"],
        "guard-for-in": 1,
        "no-alert": 1,
        "no-caller": 2,
        "no-div-regex": 0,
        "no-else-return": 0,
        "no-empty-label": 1,
        "no-eq-null": 1,
        "no-eval": 2,
        "no-extend-native": 2,
        "no-extra-bind": 2,
        "no-fallthrough": 2,
        "no-floating-decimal": 2,
        "no-implicit-coercion": 0, // disallow the type conversions with shorter notations
        "no-implied-eval": 2,
        "no-invalid-this": 2, // disallow this keywords outside of classes or class-like objects
        "no-iterator": 2,
        "no-labels": 2,
        "no-lone-blocks": 2,
        "no-loop-func": 0,
        "no-multi-spaces": 2,
        "no-multi-str": 1,
        "no-native-reassign": 2,
        "no-new": 2,
        "no-new-func": 2,
        "no-new-wrappers": 2,
        "no-octal": 2,
        "no-octal-escape": 2,
        "no-param-reassign": 0,
        "no-process-env": 1,
        "no-proto": 1,
        "no-redeclare": 2,
        "no-return-assign": 2,
        "no-script-url": 1,
        "no-self-compare": 2,
        "no-sequences": 2,
        "no-throw-literal": 2,
        "no-unused-expressions": 2,
        "no-useless-call": 1, // disallow unnecessary .call() and .apply()
        "no-void": 1,
        "no-warning-comments": [1, {"terms": ["todo", "fixme"]}],
        "no-with": 2,
        "radix": 2,
        "vars-on-top": 0,
        "wrap-iife": [1, "inside"],
        "yoda": 0,

        // Strict Mode
        "strict": 2,

        // Variables
        "init-declarations": 0, // enforce or disallow variable initializations at definition
        "no-catch-shadow": 2,
        "no-delete-var": 2,
        "no-label-var": 2,
        "no-shadow": 0,
        "no-shadow-restricted-names": 2,
        "no-undef": 2,
        "no-undef-init": 2,
        "no-undefined": 0,
        "no-unused-vars": [1, {"args": "none"}],
        "no-use-before-define": 2,

        // Node.js
        "callback-return": 0, // enforce return after a callback
        "handle-callback-err": 0,
        "no-mixed-requires": 2,
        "no-new-require": 2,
        "no-path-concat": 2,
        "no-process-exit": 1,
        "no-restricted-modules": 0,
        "no-sync": 0,

        // Stylistic Issues
        "array-bracket-spacing": [1, "never"], // enforce spacing inside array brackets
        "brace-style": [1, "1tbs", {"allowSingleLine": true}],
        "camelcase": [1, {"properties": "never"}],
        "comma-spacing": [1, {"before": false, "after": true}],
        "comma-style": [1, "last"],
        "computed-property-spacing": [1, "never"], // require or disallow padding inside computed properties
        "consistent-this": 0,
        "eol-last": 1,
        "func-names": 0,
        "func-style": 0,
        "id-length": 0, // this option enforces minimum and maximum identifier lengths (variable names, property names etc.) (off by default)
        "id-match": 0, // require identifiers to match the provided regular expression
        "indent": [1, 4],
        "key-spacing": 1,
        "linebreak-style": [1, "unix"],
        "lines-around-comment": [1, {"beforeBlockComment": true, "beforeLineComment": true, "allowBlockStart": true, "allowBlockEnd": true}], // enforce empty lines around comments
        "max-nested-callbacks": 0,
        "new-cap": 1,
        "new-parens": 1,
        "newline-after-var": 0,
        "no-array-constructor": 1,
        "no-continue": 0,
        "no-inline-comments": 0,
        "no-lonely-if": 0,
        "no-mixed-spaces-and-tabs": 2,
        "no-multiple-empty-lines": 0,
        "no-nested-ternary": 0,
        "no-new-object": 1,
        "no-spaced-func": 1,
        "no-ternary": 0,
        "no-trailing-spaces": 1,
        "no-underscore-dangle": 0,
        "no-unneeded-ternary": 1,
        "object-curly-spacing": [1, "never"], // require or disallow padding inside curly braces
        "one-var": [1, "never"],
        "operator-assignment": 0,
        "operator-linebreak": [1, "after"],
        "padded-blocks": 0,
        "quote-props": [0, "as-needed"],
        "quotes": [1, "single", "avoid-escape"],
        "semi": [2, "always"],
        "semi-spacing": [2, {"before": false, "after": true}],
        "sort-vars": 0,
        "space-after-keywords": [1, "always"],
        "space-before-blocks": [1, "always"],
        "space-before-function-paren": [1, "never"],
        "space-in-parens": [1, "never"],
        "space-infix-ops": 1,
        "space-return-throw-case": 1,
        "space-unary-ops": [1, {"words": true, "nonwords": false}],
        "spaced-comment": 0, // require or disallow a space immediately following the // or /* in a comment
        "wrap-regex": 1,

        // ECMAScript 6
        "arrow-parens": 2, // require parens in arrow function arguments
        "arrow-spacing": [2, {"before": true, "after": true}], // require space before/after arrow function's arrow
        "constructor-super": 1, // verify calls of super() in constructors
        "generator-star-spacing": 0, // enforce spacing around the * in generator functions
        "no-class-assign": 2, // disallow modifying variables of class declarations
        "no-const-assign": 2, // disallow modifying variables that are declared using const
        "no-this-before-super": 1, // disallow use of this/super before calling super() in constructors.
        "no-var": 0, // require let or const instead of var
        "object-shorthand": [2, "never"], // require method and property shorthand syntax for object literals
        "prefer-const": 0, // suggest using const declaration for variables that are never modified after declared
        "prefer-spread": 0, // suggest using the spread operator instead of .apply().
        "prefer-reflect": 0, // suggest using Reflect methods where applicable
        "require-yield": 1, // disallow generator functions that do not have yield

        // Legacy
        "max-depth": 0,
        "max-len": 0,
        "max-params": 0,
        "max-statements": 0,
        "no-bitwise": 0,
        "no-plusplus": 0
    }
}
